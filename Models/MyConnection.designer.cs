#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PCshop_.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PCshop_")]
	public partial class MyConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCredit_Card(Credit_Card instance);
    partial void UpdateCredit_Card(Credit_Card instance);
    partial void DeleteCredit_Card(Credit_Card instance);
    partial void Insertregistration(registration instance);
    partial void Updateregistration(registration instance);
    partial void Deleteregistration(registration instance);
    partial void InsertUser_Info(User_Info instance);
    partial void UpdateUser_Info(User_Info instance);
    partial void DeleteUser_Info(User_Info instance);
    #endregion
		
		public MyConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PCshop_ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Credit_Card> Credit_Cards
		{
			get
			{
				return this.GetTable<Credit_Card>();
			}
		}
		
		public System.Data.Linq.Table<registration> registrations
		{
			get
			{
				return this.GetTable<registration>();
			}
		}
		
		public System.Data.Linq.Table<User_Info> User_Infos
		{
			get
			{
				return this.GetTable<User_Info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Credit_Card")]
	public partial class Credit_Card : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Card_number;
		
		private int _Exp_month;
		
		private int _Exp_year;
		
		private int _CVV;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<registration> _registration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCard_numberChanging(int value);
    partial void OnCard_numberChanged();
    partial void OnExp_monthChanging(int value);
    partial void OnExp_monthChanged();
    partial void OnExp_yearChanging(int value);
    partial void OnExp_yearChanged();
    partial void OnCVVChanging(int value);
    partial void OnCVVChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Credit_Card()
		{
			this._registration = default(EntityRef<registration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card_number", DbType="Int NOT NULL")]
		public int Card_number
		{
			get
			{
				return this._Card_number;
			}
			set
			{
				if ((this._Card_number != value))
				{
					this.OnCard_numberChanging(value);
					this.SendPropertyChanging();
					this._Card_number = value;
					this.SendPropertyChanged("Card_number");
					this.OnCard_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp_month", DbType="Int NOT NULL")]
		public int Exp_month
		{
			get
			{
				return this._Exp_month;
			}
			set
			{
				if ((this._Exp_month != value))
				{
					this.OnExp_monthChanging(value);
					this.SendPropertyChanging();
					this._Exp_month = value;
					this.SendPropertyChanged("Exp_month");
					this.OnExp_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp_year", DbType="Int NOT NULL")]
		public int Exp_year
		{
			get
			{
				return this._Exp_year;
			}
			set
			{
				if ((this._Exp_year != value))
				{
					this.OnExp_yearChanging(value);
					this.SendPropertyChanging();
					this._Exp_year = value;
					this.SendPropertyChanged("Exp_year");
					this.OnExp_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVV", DbType="Int NOT NULL")]
		public int CVV
		{
			get
			{
				return this._CVV;
			}
			set
			{
				if ((this._CVV != value))
				{
					this.OnCVVChanging(value);
					this.SendPropertyChanging();
					this._CVV = value;
					this.SendPropertyChanged("CVV");
					this.OnCVVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_Credit_Card", Storage="_registration", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public registration registration
		{
			get
			{
				return this._registration.Entity;
			}
			set
			{
				registration previousValue = this._registration.Entity;
				if (((previousValue != value) 
							|| (this._registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registration.Entity = null;
						previousValue.Credit_Cards.Remove(this);
					}
					this._registration.Entity = value;
					if ((value != null))
					{
						value.Credit_Cards.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("registration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registration")]
	public partial class registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _CreatDate;
		
		private EntitySet<Credit_Card> _Credit_Cards;
		
		private EntitySet<User_Info> _User_Infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatDateChanged();
    #endregion
		
		public registration()
		{
			this._Credit_Cards = new EntitySet<Credit_Card>(new Action<Credit_Card>(this.attach_Credit_Cards), new Action<Credit_Card>(this.detach_Credit_Cards));
			this._User_Infos = new EntitySet<User_Info>(new Action<User_Info>(this.attach_User_Infos), new Action<User_Info>(this.detach_User_Infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatDate
		{
			get
			{
				return this._CreatDate;
			}
			set
			{
				if ((this._CreatDate != value))
				{
					this.OnCreatDateChanging(value);
					this.SendPropertyChanging();
					this._CreatDate = value;
					this.SendPropertyChanged("CreatDate");
					this.OnCreatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_Credit_Card", Storage="_Credit_Cards", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<Credit_Card> Credit_Cards
		{
			get
			{
				return this._Credit_Cards;
			}
			set
			{
				this._Credit_Cards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_User_Info", Storage="_User_Infos", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<User_Info> User_Infos
		{
			get
			{
				return this._User_Infos;
			}
			set
			{
				this._User_Infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Credit_Cards(Credit_Card entity)
		{
			this.SendPropertyChanging();
			entity.registration = this;
		}
		
		private void detach_Credit_Cards(Credit_Card entity)
		{
			this.SendPropertyChanging();
			entity.registration = null;
		}
		
		private void attach_User_Infos(User_Info entity)
		{
			this.SendPropertyChanging();
			entity.registration = this;
		}
		
		private void detach_User_Infos(User_Info entity)
		{
			this.SendPropertyChanging();
			entity.registration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Info")]
	public partial class User_Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Full_Name;
		
		private string _Address;
		
		private string _City;
		
		private int _Zip;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _CreatTime;
		
		private EntityRef<registration> _registration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipChanging(int value);
    partial void OnZipChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatTimeChanged();
    #endregion
		
		public User_Info()
		{
			this._registration = default(EntityRef<registration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Int NOT NULL")]
		public int Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatTime
		{
			get
			{
				return this._CreatTime;
			}
			set
			{
				if ((this._CreatTime != value))
				{
					this.OnCreatTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatTime = value;
					this.SendPropertyChanged("CreatTime");
					this.OnCreatTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_User_Info", Storage="_registration", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public registration registration
		{
			get
			{
				return this._registration.Entity;
			}
			set
			{
				registration previousValue = this._registration.Entity;
				if (((previousValue != value) 
							|| (this._registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registration.Entity = null;
						previousValue.User_Infos.Remove(this);
					}
					this._registration.Entity = value;
					if ((value != null))
					{
						value.User_Infos.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("registration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
